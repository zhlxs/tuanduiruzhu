package com.cn.umessage.dao.pms.jte.client;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;

/**
 * This class was generated by the JAX-WS RI. JAX-WS RI 2.2.9-b130926.1035
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ThirdpartyService", targetNamespace = "http://tempuri.org/", wsdlLocation = "http://119.29.101.13:2017/JTE.Server/ThirdpartyService?wsdl")
public class ThirdpartyService extends Service {

	private final static URL THIRDPARTYSERVICE_WSDL_LOCATION;
	private final static WebServiceException THIRDPARTYSERVICE_EXCEPTION;
	private final static QName THIRDPARTYSERVICE_QNAME = new QName(
			"http://tempuri.org/", "ThirdpartyService");

	static {
		URL url = null;
		WebServiceException e = null;
		try {
			url = new URL(
					"http://119.29.101.13:2017/JTE.Server/ThirdpartyService?wsdl");
		} catch (MalformedURLException ex) {
			e = new WebServiceException(ex);
		}
		THIRDPARTYSERVICE_WSDL_LOCATION = url;
		THIRDPARTYSERVICE_EXCEPTION = e;
	}

	public ThirdpartyService() {
		super(__getWsdlLocation(), THIRDPARTYSERVICE_QNAME);
	}

	public ThirdpartyService(WebServiceFeature... features) {
		super(__getWsdlLocation(), THIRDPARTYSERVICE_QNAME, features);
	}

	public ThirdpartyService(URL wsdlLocation) {
		super(wsdlLocation, THIRDPARTYSERVICE_QNAME);
	}

	public ThirdpartyService(URL wsdlLocation, WebServiceFeature... features) {
		super(wsdlLocation, THIRDPARTYSERVICE_QNAME, features);
	}

	public ThirdpartyService(URL wsdlLocation, QName serviceName) {
		super(wsdlLocation, serviceName);
	}

	public ThirdpartyService(URL wsdlLocation, QName serviceName,
			WebServiceFeature... features) {
		super(wsdlLocation, serviceName, features);
	}

	/**
	 * 
	 * @return returns IThirdpartyService
	 */
	@WebEndpoint(name = "BasicHttpBinding_IThirdpartyService")
	public IThirdpartyService getBasicHttpBindingIThirdpartyService() {
		return super.getPort(new QName("http://tempuri.org/",
				"BasicHttpBinding_IThirdpartyService"),
				IThirdpartyService.class);
	}

	/**
	 * 
	 * @param features
	 *            A list of {@link javax.xml.ws.WebServiceFeature} to configure
	 *            on the proxy. Supported features not in the
	 *            <code>features</code> parameter will have their default
	 *            values.
	 * @return returns IThirdpartyService
	 */
	@WebEndpoint(name = "BasicHttpBinding_IThirdpartyService")
	public IThirdpartyService getBasicHttpBindingIThirdpartyService(
			WebServiceFeature... features) {
		return super.getPort(new QName("http://tempuri.org/",
				"BasicHttpBinding_IThirdpartyService"),
				IThirdpartyService.class, features);
	}

	private static URL __getWsdlLocation() {
		if (THIRDPARTYSERVICE_EXCEPTION != null) {
			throw THIRDPARTYSERVICE_EXCEPTION;
		}
		return THIRDPARTYSERVICE_WSDL_LOCATION;
	}

}
